---
- name: create images directory
  file:
    path: /home/stack/images
    state: directory
    mode: 0755

- name: find overcloud images
  find:
    paths: /usr/share/rhosp-director-images
    patterns: "*latest*.tar"
    recurse: "yes"
    file_type: "link"
  register: found_images

- name: copy overcloud images
  copy:
    src: "{{ item.path }}"
    dest: /home/stack/images
    owner: "stack"
    remote_src: yes
  with_items:
    - "{{ found_images.files }}"

- name: find copied overcloud images
  find:
    paths: /home/stack/images
    patterns: "*latest*.tar"
    recurse: "yes"
    file_type: "file"
  register: copied_images

- name: extract images
  unarchive:
    src: "{{ item.path }}"
    dest: /home/stack/images
    remote_src: true
  with_items:
    - "{{ copied_images.files }}"

- name: upload images to glance
  shell: |
    source /home/stack/stackrc &&
    /bin/openstack overcloud image upload --image-path /home/stack/images/
  args:
    chdir: /home/stack/images

- name: copy overcloud-full to overcloud-full-dpdk
  copy:
    src: /home/stack/images/overcloud-full.qcow2
    dest: /home/stack/images/overcloud-full-dpdk.qcow2
    owner: "stack"
    remote_src: yes
  when: BUILD_DPDK_IMAGE == 'yes'

- name: register dpdk image with satelitte
    /usr/bin/virt-customize  -a /home/stack/images/overcloud-full-dpdk.qcow2 \
    --copy-in /tmp/katello-ca-consumer-latest.noarch.rpm:/tmp/ \
    --run-command 'yum localinstall -y /tmp/katello-ca-consumer-latest.noarch.rpm' \
    --run-command 'hostname virt-customize.local; subscription-manager unregister || true' \
    --run-command 'hostname virt-customize.local; subscription-manager clean' \
    --run-command 'hostname virt-customize.local; subscription-manager register --activationkey={{ SATELLITE_KEY }} --org={{ SATELLITE_ORG }} --force'
  environment:
    LIBGUESTFS_BACKEND: direct
  when: RH_REG_METHOD == 'satellite'

- name: register dpdk image with portal
  shell: |
    /usr/bin/virt-customize  -a /home/stack/images/overcloud-full-dpdk.qcow2 \
    --sm-credentials {{ RH_PORTAL_USER }}:password:{{ RH_PORTAL_PASSWORD }} --sm-register --sm-attach auto
  environment:
    LIBGUESTFS_BACKEND: direct
  when: RH_REG_METHOD == 'portal'

- name: virt cusomize dpdk image
  shell: |
    /usr/bin/virt-customize  -a /home/stack/images/overcloud-full-dpdk.qcow2 \
    --run-command 'subscription-manager repos --enable=rhel-7-server-rpms --enable=rhel-7-server-extras-rpms --enable=rhel-7-server-rh-common-rpms --enable=rhel-ha-for-rhel-7-server-rpms --enable=rhel-7-server-openstack-10-rpms --enable=rhel-7-server-openstack-10-devtools-rpms' \
    --copy-in /etc/yum.repos.d/contrail.repo:/etc/yum.repos.d \
    --run-command 'yum install -y contrail-vrouter-utils contrail-vrouter-dpdk contrail-vrouter-dpdk-init' \
    --run-command 'rm -fr /var/cache/yum/*' \
    --run-command 'yum clean all' \
    --run-command 'rm -rf /etc/yum.repos.d/contrail.repo' \
    --run-command 'subscription-manager unregister' \
    --selinux-relabel
  environment:
    LIBGUESTFS_BACKEND: direct
  when: BUILD_DPDK_IMAGE == 'yes' and OPENSTACK_VERSION == 'newton'

- name: virt cusomize dpdk image
  shell: |
    /usr/bin/virt-customize  -a /home/stack/images/overcloud-full-dpdk.qcow2 \
    --sm-credentials {{ RH_PORTAL_USER }}:password:{{ RH_PORTAL_PASSWORD }} --sm-register --sm-attach auto \
    --run-command 'subscription-manager repos --enable=rhel-7-server-rpms --enable=rhel-7-server-extras-rpms --enable=rhel-7-server-rh-common-rpms --enable=rhel-ha-for-rhel-7-server-rpms --enable=rhel-7-server-openstack-11-rpms --enable=rhel-7-server-openstack-11-devtools-rpms' \
    --copy-in /etc/yum.repos.d/contrail.repo:/etc/yum.repos.d \
    --run-command 'yum install -y contrail-vrouter-utils contrail-vrouter-dpdk contrail-vrouter-dpdk-init' \
    --run-command 'rm -fr /var/cache/yum/*' \
    --run-command 'yum clean all' \
    --run-command 'rm -rf /etc/yum.repos.d/contrail.repo' \
    --run-command 'subscription-manager unregister' \
    --selinux-relabel
  environment:
    LIBGUESTFS_BACKEND: direct
  when: BUILD_DPDK_IMAGE == 'yes' and OPENSTACK_VERSION == 'ocata'

- name: upload overcloud dpdk image to glance
  shell: |
    source /home/stack/stackrc &&
    openstack image create --container-format bare --disk-format qcow2 --file /home/stack/images/overcloud-full-dpdk.qcow2 overcloud-full-dpdk
  when: BUILD_DPDK_IMAGE == 'yes'

- name: set dpdk image properties
  shell: |
    source /home/stack/stackrc &&
    openstack image set overcloud-full-dpdk --property kernel_id=`openstack image show bm-deploy-kernel -c id -f value` --property ramdisk_id=`openstack image show bm-deploy-ramdisk -c id -f value`
  when: BUILD_DPDK_IMAGE == 'yes'

- name: get ironic uuid list
  shell: |
    source /home/stack/stackrc &&
    /bin/openstack baremetal node list -c UUID -f value
  register: ironic_uuid_list

- name: set ironic node power stat
  shell: |
    source /home/stack/stackrc && 
    /bin/openstack baremetal node power off {{ item }}
  with_items:
    - "{{ ironic_uuid_list.stdout_lines }}"

- name: configure boot mode for ironic nodes
  shell: |
    source /home/stack/stackrc &&
    /bin/openstack baremetal configure boot

- name: set ironic node managable stat
  shell: |
    source /home/stack/stackrc && 
    /bin/openstack baremetal node manage {{ item }}
  with_items:
    - "{{ ironic_uuid_list.stdout_lines }}"

- name: start introspection
  shell: |
    source /home/stack/stackrc &&
    /bin/openstack overcloud node introspect --all-manageable --provide
